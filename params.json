{"name":"Pure CSS for Ruby on Rails","tagline":"Pure CSS (http://purecss.io) in the Assets Pipeline of Rails 3.1 and 3.2","body":"# Purecss for Ruby on Rails\r\n\r\n[Pure](http://purecss.io) is a set of small, responsive CSS modules that you can use in every web project realized by the yahoo developer team.\r\nThis gem adds Pure CSS 0.1.0 to the Assets Pipeline of Rails 3.2. \r\n\r\nAdditionally this gem provides\r\n- a jQuery function that automatically enables the dropdown menu without the need of additional rails packages/frameworks (YUI or others).\r\n- a small optional set of css for right-aligned horizontal menus, CSS carets (font-independent), vertical separators, alerts, ...\r\n\r\nI cite directly from [purecss.io](http://purecss.io)\r\n > CSS with a minimal footprint.\r\n >\r\n > Pure is ridiculously tiny. The entire set of modules clocks in at 5.7KB minified and gzipped, without forgoing responsive styles, design, or ease of use. Crafted with mobile devices in mind, it was important to us to keep our file sizes small, and every line of CSS was carefully considered. If you decide to only use a subset of these modules, you'll save even more bytes.\r\n\r\nNote: [will_paginate](https://github.com/mislav/will_paginate) is integrated with purecss pagination style using the [purecss-will_paginate](https://github.com/mseri/rails-purecss-will_paginate) gem.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'purecss'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nThen you can add the following directives to your css manifest file (application.css):\r\n\r\n    *= require purecss\r\n\r\nfor the responsive bundle, or\r\n\r\n    *= require purecss-nr\r\n\r\nfor the non-responsive one.\r\n\r\n\r\nIf you want to include just an individual module (see [purecss.io](http://purecss.io)) add instead\r\n\r\n    *= require purecss/<module>\r\n\r\n\r\n\r\nIf it is too long for you, you can avoid touching the manifest files and run the generator (with optional parameter responsive/nonresponsive):\r\n\r\n    $ rails generate purecss:install\r\n\r\n\r\n## Usage\r\n\r\nAfter the installation you can simply go to [purecss.io](http://purecss.io) and use their styles.\r\n\r\n### Custom CSS\r\n\r\nAdd to your css manifest file, under the ```require purecss``` line:\r\n\r\n    *= require purecss-addons\r\n\r\nIt provides the CSS classes \r\n\r\n- ```pure-custom-caret``` for the dropdown menu\r\n- ```pure-menu-custom-separator-vertical``` to add a vertical separator to the horizontal menu\r\n- ```pure-custom-close``` for nicer ```x``` to close eventual modal views (to display modals, bootstrap-modal works quite well with Pure)\r\n- ```pure-custom-alert```, ```pure-custom-alert-error```, ```pure-custo-alert-success```, ```pure-custom-alert-warning```\r\n- ...\r\n\r\n### Dropdown Menu\r\n\r\nFor dropdown menu I developed a small workaround based on the code of [bootstrap-dropdown.js](https://github.com/twitter/bootstrap/blob/master/js/bootstrap-dropdown.js).\r\nIt is enough to add the following directive to your js manifest file (application.js):\r\n\r\n    //= require purecss-dropdown\r\n\r\nand then use the class ```pure-menu-has-children``` for the ```li``` that will contain the submenu, \r\nadd ```data-toggle=\"dropdown\"``` to its label element (tipically an anchor), \r\nand use the class ```pure-menu-children``` for the ```ul``` that contains the submenu.\r\n\r\nI hope it is clear with the following example (that includes the custom css too):\r\n```\r\n<header class=\"header pure-u-1\"> \r\n  <div class=\"pure-menu pure-menu-open pure-menu-fixed pure-menu-horizontal\">\r\n      <div class=\"pure-menu-heading\"><%= link_to \"sample app\", root_path, id: \"logo\" %></div>\r\n        <ul>\r\n          <li><%= link_to \"Home\", root_path %></li>\r\n          <li><%= link_to \"Help\", help_path %></li>\r\n          <% if signed_in? %>\r\n            <li><%= link_to \"Users\", users_path %></li>\r\n            <li class=\"pure-menu-custom-separator-vertical\"></li>\r\n            <li class=\"pure-menu-can-have-children pure-menu-has-children\">\r\n              <a href=\"#\" data-toggle=\"dropdown\">Account <span class=\"pure-custom-caret\"></span></a>\r\n              <ul class=\"pure-menu-children\">\r\n                <li><%= link_to \"Profile\", current_user %></li>\r\n                <li><%= link_to \"Settings\", edit_user_path(current_user) %></li>\r\n                <li class=\"pure-menu-separator\"></li>\r\n                <li>\r\n                  <%= link_to \"Sign Out\", signout_path, method: \"delete\" %>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          <% else %>\r\n            <li><%= link_to \"Sign In\", signin_path %></li>\r\n          <% end %>\r\n        </ul>\r\n      </div>\r\n</header>\r\n```\r\n\r\nThe actual dropdown menu code do not support dropdown submenus, for that you can use YUI as in purecss.io example, or pull me a workaround :)\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}